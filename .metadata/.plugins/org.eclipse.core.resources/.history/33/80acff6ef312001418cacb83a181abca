package com.bloc.blocs;

import org.andengine.engine.camera.Camera;
import org.andengine.entity.Entity;
import org.andengine.entity.primitive.Rectangle;

public class GamePiece {
	
	private ArrayList<Entity> pieceArray;
	
	public static GamePiece instance;
	
	boolean moveable;
	Camera mCamera;
	
	public static GamePiece getSharedInstance() {
		if (instance == null)
			instance = new GamePiece();
		return instance;
	}
	
	private GamePiece() {
		moveable = true;
		mCamera = Blocs.getSharedInstance().mCamera;
		
	}
	
	public void fallingPiece(float gravityRate) {
		
	}
	
	public Entity getSquare() {
		Rectangle upperLeft = new Rectangle(0, 0, 30, 30, Blocs.getSharedInstance().getVertexBufferObjectManager());
		Rectangle upperRight = new Rectangle(30, 0, 30, 30, Blocs.getSharedInstance().getVertexBufferObjectManager());
		Rectangle lowerLeft = new Rectangle(0, 30, 30, 30, Blocs.getSharedInstance().getVertexBufferObjectManager());
		Rectangle lowerRight = new Rectangle(30, 30, 30, 30, Blocs.getSharedInstance().getVertexBufferObjectManager());
		Entity square = new Entity(0, 0);
		square.attachChild(upperLeft);
		square.attachChild(upperRight);
		square.attachChild(lowerRight);
		square.attachChild(lowerLeft);
		return square;
	}
	
	public Entity getLog() {
		Rectangle top = new Rectangle(0, 0, 30, 30, Blocs.getSharedInstance().getVertexBufferObjectManager());
		Rectangle topMid = new Rectangle(0, 30, 30, 30, Blocs.getSharedInstance().getVertexBufferObjectManager());
		Rectangle bottomMid = new Rectangle(0, 60, 30, 30, Blocs.getSharedInstance().getVertexBufferObjectManager());
		Rectangle bottom = new Rectangle(0, 90, 30, 30, Blocs.getSharedInstance().getVertexBufferObjectManager());
		Entity log = new Entity(0, 0);
		square.attachChild(top);
		square.attachChild(topMid);
		square.attachChild(bottomMid);
		square.attachChild(bottom);
		return log;
	}
	
	public Entity getS() {
		Rectangle one = new Rectangle(0, 30, 30, 30, Blocs.getSharedInstance().getVertexBufferObjectManager());
		Rectangle two = new Rectangle(30, 30, 30, 30, Blocs.getSharedInstance().getVertexBufferObjectManager());
		Rectangle three = new Rectangle(0, 30, 30, 30, Blocs.getSharedInstance().getVertexBufferObjectManager());
		Rectangle four = new Rectangle(60, 0, 30, 30, Blocs.getSharedInstance().getVertexBufferObjectManager());
		Entity shape = new Entity(0, 0);
		square.attachChild(one);
		square.attachChild(two);
		square.attachChild(three);
		square.attachChild(four);
		return shape;
	}
	
	public Entity getZ() {
		Rectangle one = new Rectangle(0, 0, 30, 30, Blocs.getSharedInstance().getVertexBufferObjectManager());
		Rectangle two = new Rectangle(0, 30, 30, 30, Blocs.getSharedInstance().getVertexBufferObjectManager());
		Rectangle three = new Rectangle(30, 30, 30, 30, Blocs.getSharedInstance().getVertexBufferObjectManager());
		Rectangle four = new Rectangle(60, 30, 30, 30, Blocs.getSharedInstance().getVertexBufferObjectManager());
		Entity shape = new Entity(0, 0);
		square.attachChild(one);
		square.attachChild(two);
		square.attachChild(three);
		square.attachChild(four);
		return shape;
	}
	
	public Entity getLeftL() {
		Rectangle one = new Rectangle(0, 0, 30, 30, Blocs.getSharedInstance().getVertexBufferObjectManager());
		Rectangle two = new Rectangle(0, 30, 30, 30, Blocs.getSharedInstance().getVertexBufferObjectManager());
		Rectangle three = new Rectangle(0, 60, 30, 30, Blocs.getSharedInstance().getVertexBufferObjectManager());
		Rectangle four = new Rectangle(30, 60, 30, 30, Blocs.getSharedInstance().getVertexBufferObjectManager());
		Entity shape = new Entity(0, 0);
		square.attachChild(one);
		square.attachChild(two);
		square.attachChild(three);
		square.attachChild(four);
		return shape;
	}
	
	public Entity getRightL() {
		Rectangle one = new Rectangle(30, 0, 30, 30, Blocs.getSharedInstance().getVertexBufferObjectManager());
		Rectangle two = new Rectangle(30, 30, 30, 30, Blocs.getSharedInstance().getVertexBufferObjectManager());
		Rectangle three = new Rectangle(30, 60, 30, 30, Blocs.getSharedInstance().getVertexBufferObjectManager());
		Rectangle four = new Rectangle(0, 60, 30, 30, Blocs.getSharedInstance().getVertexBufferObjectManager());
		Entity shape = new Entity(0, 0);
		square.attachChild(one);
		square.attachChild(two);
		square.attachChild(three);
		square.attachChild(four);
		return shape;
	}
	
	public Entity getT() {
		Rectangle one = new Rectangle(0, 0, 30, 30, Blocs.getSharedInstance().getVertexBufferObjectManager());
		Rectangle two = new Rectangle(30, 0, 30, 30, Blocs.getSharedInstance().getVertexBufferObjectManager());
		Rectangle three = new Rectangle(60, 0, 30, 30, Blocs.getSharedInstance().getVertexBufferObjectManager());
		Rectangle four = new Rectangle(30, 30, 30, 30, Blocs.getSharedInstance().getVertexBufferObjectManager());
		Entity shape = new Entity(0, 0);
		square.attachChild(one);
		square.attachChild(two);
		square.attachChild(three);
		square.attachChild(four);
		return shape;
	}

}
